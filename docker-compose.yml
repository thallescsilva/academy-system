services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: academico-postgres
    environment:
      POSTGRES_DB: academico
      POSTGRES_USER: academico
      POSTGRES_PASSWORD: academico123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - academico-network

  # Keycloak para autenticação
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: academico-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/academico
      KC_DB_USERNAME: academico
      KC_DB_PASSWORD: academico123
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    command: ["start-dev", "--import-realm"]
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
    networks:
      - academico-network

  # Backend Quarkus
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: academico-backend
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/academico
      QUARKUS_DATASOURCE_USERNAME: academico
      QUARKUS_DATASOURCE_PASSWORD: academico123
      QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak:8080/realms/academico
      QUARKUS_OIDC_CLIENT_ID: academico-backend
      QUARKUS_OIDC_CREDENTIALS_SECRET: secret
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - keycloak
    networks:
      - academico-network

  # Frontend Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: academico-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - academico-network

volumes:
  postgres_data:

networks:
  academico-network:
    driver: bridge
